// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["multiSchema"]
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

enum RiskStatus {
  new
  open
  closed
}

enum UserRole {
  user
  manager
  owner
}

model Company {
  id        String   @id @default(uuid())
  name      String
  cvr       String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  projects Project[]
  users    User[]

  contact   Contact @relation(fields: [contactId], references: [id])
  contactId String
}

model Contact {
  id       String  @id @default(uuid())
  email    String
  fullName String
  address  String?
  phone    String?
  website  String?

  users     User[]
  companies Company[]
}

model User {
  id             String   @id @default(uuid())
  jobDescription String?
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  role           UserRole

  comapany  Company @relation(fields: [companyId], references: [id])
  companyId String
  contact   Contact @relation(fields: [contactId], references: [id])
  contactId String

  projectUsers ProjectUser[]
  risks        Risk[]
}

model Project {
  id                      String   @id @default(uuid())
  createdAt               DateTime @default(now())
  updatedAt               DateTime @updatedAt
  name                    String
  description             String
  startdate               DateTime
  dueDate                 DateTime
  budget                  String?
  riskRegisterDescription String?
  riskReportIntro         String?
  riskReportDocumentId    String?

  company   Company @relation(fields: [companyId], references: [id])
  companyId String

  risks Risk[]

  projectUsers ProjectUser[]
}

model ProjectUser {
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user      User    @relation(fields: [userId], references: [id])
  userId    String
  project   Project @relation(fields: [projectId], references: [id])
  projectId String

  @@id([userId, projectId])
}

model Risk {
  id          String     @id @default(uuid())
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  customId    String
  description String
  probability Int
  consequence Int
  status      RiskStatus
  comment     String?
  activity    String?

  riskowner User    @relation(fields: [userId], references: [id])
  userId    String
  project   Project @relation(fields: [projectId], references: [id])
  projectId String
}
